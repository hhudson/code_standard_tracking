prompt --application/deployment/install/install_acl_tables
begin
--   Manifest
--     INSTALL: INSTALL-ACL Tables
--   Manifest End
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2021.04.15'
,p_release=>'21.1.7'
,p_default_workspace_id=>9690978936188613
,p_default_application_id=>128
,p_default_id_offset=>422538065343964275
,p_default_owner=>'ILA'
);
wwv_flow_api.create_install_script(
 p_id=>wwv_flow_api.id(5057642658916295453)
,p_install_id=>wwv_flow_api.id(4578904365199564796)
,p_name=>'ACL Tables'
,p_sequence=>90
,p_script_type=>'INSTALL'
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'create table eba_stds_access_levels (',
'    id                      number              not null',
'                                                constraint eba_stds_acc_levels_pk',
'                                                primary key,',
'    access_level            varchar2(30)        not null',
'                                                constraint eba_stds_access_levels_uk',
'                                                unique,',
'    --',
'    constraint eba_stds_acc_lv_ac_lvl_ck1',
'           check (access_level in (''Administrator'', ''Contributor'',''Reader'' )) )',
'/',
'',
'',
'create table eba_stds_users (',
'    id                      number              not null',
'                                                constraint eba_stds_users_pk',
'                                                primary key,',
'    username                varchar2(255)       not null',
'                                                constraint eba_stds_users_uk',
'                                                unique,',
'    access_level_id         number              not null',
'                                                constraint eba_stds_users_fk1',
'                                                references eba_stds_access_levels,',
'    account_locked          varchar2(1)         not null',
'                                                constraint eba_stds_users_ck1',
'                                                check (account_locked in (''Y'',''N'')),',
'    --',
'    row_version_number      number                          not null,',
'    created                 timestamp with local time zone  not null,',
'    created_by              varchar2(255)                   not null,',
'    updated                 timestamp with local time zone  not null,',
'    updated_by              varchar2(255)                   not null )',
'/',
'create index eba_stds_users_i1 on eba_stds_users (access_level_id);',
'',
'create or replace trigger eba_stds_users_biu',
'    before insert or update on eba_stds_users',
'    for each row',
'begin',
'    if inserting then',
'        if :new.id is null then',
'            :new.id := eba_stds.gen_id();',
'        end if;',
'        :new.created_by := nvl(v(''APP_USER''), USER);',
'        :new.created    := localtimestamp;',
'        :new.row_version_number := 1;',
'        if :new.account_locked is null then',
'            :new.account_locked := ''N'';    ',
'        end if;',
'    end if;',
'    if updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    :new.updated_by := nvl(v(''APP_USER''), USER);',
'    :new.updated    := localtimestamp;',
'    -- Always store username as upper case',
'    :new.username := upper(:new.username);',
'end;',
'/',
'alter trigger eba_stds_users_biu enable;',
'',
'create or replace trigger eba_stds_users_bd',
'    before delete on eba_stds_users',
'    for each row',
'declare',
'    pragma autonomous_transaction;',
'begin',
'    -- Disallow deletes to a user''s own record unless last one.',
'    if v(''APP_USER'') = upper(:old.username) then',
'       for c1 in (',
'          select count(*) cnt',
'            from eba_stds_users',
'           where id != :old.id )',
'       loop',
'          if c1.cnt > 0 then',
'             raise_application_error(-20002, ''Delete disallowed, you cannot delete your own access control details.'');',
'          end if;',
'       end loop;',
'    end if;    ',
'end;',
'/',
'alter trigger eba_stds_users_bd enable;',
'',
'',
'create table eba_stds_error_lookup (',
'    constraint_name         varchar2(30)        not null',
'                                                constraint eba_stds_error_lookup_pk',
'                                                primary key,',
'    message                 varchar2(4000)      not null,',
'    language_code           varchar2(30)        not null,',
'    --',
'    constraint eba_stds_error_lookup_uk ',
'           unique (constraint_name,language_code) )',
'/',
'    ',
'    ',
'create table eba_stds_preferences (',
'    id                      number              not null',
'                                                constraint eba_stds_preferences_pk',
'                                                primary key,',
'    preference_name         varchar2(255)       not null',
'                                                constraint eba_stds_preferences_uk',
'                                                unique,',
'    preference_value        varchar2(255)       not null,',
'    --',
'    row_version_number      number                          not null,',
'    created                 timestamp with local time zone  not null,',
'    created_by              varchar2(255)                   not null,',
'    updated                 timestamp with local time zone  not null,',
'    updated_by              varchar2(255)                   not null )',
'/',
'',
'create or replace trigger eba_stds_preferences_biu',
'before insert or update on eba_stds_preferences',
'    for each row',
'begin',
'    if inserting and :new.id is null then',
'        :new.id := eba_stds.gen_id();',
'    end if;',
'    if inserting then',
'        :new.created_by  := nvl(v(''APP_USER''),USER);',
'        :new.created     := localtimestamp;',
'        :new.row_version_number := 1;',
'    end if;',
'    if updating then',
'        :new.row_version_number := nvl(:old.row_version_number,1) + 1;',
'    end if;',
'    :new.updated_by := nvl(v(''APP_USER''),USER);',
'    :new.updated    := localtimestamp;',
'    :new.preference_name := upper(:new.preference_name);',
'end;',
'/',
'alter trigger eba_stds_preferences_biu enable;',
''))
);
wwv_flow_api.component_end;
end;
/
